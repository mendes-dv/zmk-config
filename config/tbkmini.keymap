#define default_layer       0 // Default layer
#define arrows_and_mouse    1
#define symbols             2
#define bluetooth           3
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <500>;     // 300
    delay-ms = <0>;                   // 0
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <40>;      // 300
    delay-ms = <0>;                   // 0
};

/ {
    behaviors {
        home_row_left: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        home_row_right: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        function_layer: function_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "FUNCTION_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <16>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
        };

        i3: i3 {
            compatible = "zmk,behavior-hold-tap";
            label = "I3";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
            quick-tap-ms = <75>;
        };
    };

    combos {
        compatible = "zmk,combos";

        screen1 {
            bindings = <&kp LG(NUMBER_1)>;
            key-positions = <30 13 38>;
            layers = <0>;
            timeout-ms = <50>;
            require-prior-idle-ms = <100>;
        };

        screen2 {
            bindings = <&kp LG(NUMBER_2)>;
            key-positions = <30 14 38>;
            layers = <0>;
            timeout-ms = <50>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  F   |  P   |  T   |    |  J   |  L   |  U  |  Y  |  '  |   \  |
            // |  TAB  |  A  |  R  |  S   |  T   |  G   |    |  M   |  N   |  E  |  I  |  O  |   '  |
            // | SHIFT |  Z  |  X  |  C   |  D   |  V   |    |  K   |  H   |  ,  |  .  |  /  | CTRL |
            //                     | ESC  | SPC  | TAB  |    | RET  | BSPC | DEL |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E  &kp R                &kp T                  &kp Y          &kp U      &kp I      &kp O    &kp P            &kp TAB
&kp LEFT_SHIFT  &kp A  &kp S  &kp D  &function_layer 4 F  &kp G                  &kp H          &kp J      &kp K      &kp L    &i3 5 SEMICOLON  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C  &i3 5 V              &function_layer 3 B    &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH         &kp BACKSLASH
                              &mo 1  &kp SPACE            &kp LEFT_GUI           &kp BACKSPACE  &kp ENTER  &mo 2
            >;
        };

        arrows_and_mouse {
            bindings = <
&trans  &msc SCRL_UP    &mkp MB1           &mmv MOVE_UP     &mkp MB2         &trans              &trans          &trans          &trans        &trans     &trans  &trans
&trans  &msc SCRL_DOWN  &mmv MOVE_LEFT     &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &kp C_PLAY_PAUSE    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &kp C_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV       &kp C_NEXT          &trans          &trans          &trans        &trans     &trans  &trans
                                           &trans           &trans           &trans              &trans          &trans          &mo 3
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL  &kp AMPERSAND    &kp ASTERISK          &trans                 &kp HASH     &kp GRAVE
&trans  &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp MINUS  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT  &kp NON_US_BACKSLASH
&trans  &kp N6           &kp N7       &kp N8    &kp N9      &kp N0         &kp EQUAL  &kp PLUS         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN  &kp PIPE
                                      &mo 3     &trans      &trans         &trans     &trans           &trans
            >;
        };

        bluetooth {
            bindings = <
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans          &trans      &trans      &trans  &trans       &trans  &trans
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_NXT  &bt BT_PRV  &trans  &trans       &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans      &trans      &trans  &bootloader  &trans  &sl default_layer
                                            &trans        &trans        &bt BT_CLR      &trans      &trans      &trans
            >;
        };

        functions {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp F1   &kp F2  &kp F3  &kp F4  &kp F5   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F11  &trans  &trans  &trans  &kp F12  &trans
                        &trans  &trans  &trans    &trans   &trans  &trans
            >;
        };

        i3 {
            bindings = <
&trans  &trans            &trans            &trans            &trans            &trans        &kp LG(LEFT)      &kp LG(DOWN)      &kp LG(UP_ARROW)  &kp LG(RIGHT)      &trans  &trans
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)    &kp LG(H)         &kp LG(J)         &kp LG(L)         &kp LG(L)          &trans  &trans
&trans  &kp LG(NUMBER_6)  &kp LG(N7)        &kp LG(F)         &trans            &trans        &kp LG(LS(LEFT))  &kp LG(LS(DOWN))  &kp LG(LS(DOWN))  &kp LG(LS(RIGHT))  &trans  &trans
                                            &kp LEFT_GUI      &kp LG(SPACE)     &trans        &trans            &kp LEFT_SHIFT    &trans
            >;
        };
    };
};
