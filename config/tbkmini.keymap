#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

&lt {
  tapping-term-ms = <300>;
  quick_tap_ms = <200>;
  flavor = "hold-preferred";
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

&behavior-default {
  #binding-cells = <2>;
  tapping-term-ms = <150>;
  quick_tap_ms = <150>;
  flavor = "tap-preferred";
};

&keymap {
  chosen {
    zmk,matrix_transform = &skeletyl_transform;
  };

  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      bindings = <&kp>, <&kp>;
    };
    u_caps_word: u_caps_word {
      compatible = "zmk,behavior-mod-morph";
      label = "u_caps_word";
      bindings = <&caps_word>, <&kp CAPS>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BSPC
        &kp TAB &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G &kp H &hm RSHFT J &hm RCTRL K
        &hm LALT L &hm RGUI SCLN &kp QUOT
        &kp LSFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp RSFT
        &kp LCTRL &lt NAV SPACE &lt NUM RET &lt SYM BSPC &kp DEL &kp RALT
      >;
    };

    num_layer {
      bindings = <
        &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS
        &kp TAB &kp LBKT &kp RBKT &kp LCBR &kp RCBR &kp LT &kp GT &kp PLUS &kp EQUAL &kp ASTR &kp FSLH &kp PERC
        &kp LSFT &kp F10 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp DOT
        &kp LCTRL &kp DOT &kp COMMA &kp BSPC &kp RET &kp DEL
      >;
    };

    sym_layer {
      bindings = <
        &kp ESC &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CIRC &kp AMPS &kp STAR &kp LPAR &kp RPAR &kp PLUS
        &kp TAB &kp TILDE &kp PIPE &kp UNDER &kp PLUS &kp LCBR &kp RCBR &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp EQ
        &kp LSFT &kp LBRC &kp RBRC &kp LPRN &kp RPRN &kp COLON &kp SCLN &kp DQT &kp SQT &kp BSLASH &kp GRAVE &kp GT
        &kp LCTRL &trans &trans &trans &trans &trans &trans
      >;
    };

    fun_layer {
      bindings = <
        &kp ESC &kp F12 &kp F7 &kp F8 &kp F9 &kp PRINT &kp SYSREQ &kp CAPS &kp PSCR &kp SCROLL &kp PAUSE &kp INS
        &kp TAB &kp F11 &kp F4 &kp F5 &kp F6 &kp INSERT &kp DELETE &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp PGUP
        &kp LSFT &kp F10 &kp F1 &kp F2 &kp F3 &kp GRAVE &kp TILDE &kp TAB &kp RET &kp BSPC &kp LPRN &kp RPRN
        &kp LCTRL &trans &trans &trans &trans &trans &trans
      >;
    };

    nav_layer {
      bindings = <
        &kp ESC &kp HOME &kp PG_UP &kp PG_DN &kp END &kp LEFT &kp RIGHT &kp UP &kp DOWN &kp INS &kp DEL &kp BKSP
        &kp TAB &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &kp ESC &kp TAB &kp CAPS &kp PSCR &kp PAUSE &kp BKSP &kp RET
        &kp LSFT &kp LBRC &kp RBRC &kp LPRN &kp RPRN &kp LCBR &kp RCBR &kp LT &kp GT &kp EQ &kp PLUS &kp DOT
        &kp LCTRL &trans &trans &trans &trans &trans &trans
      >;
    };

    mse_layer {
      bindings = <
        &kp ESC &kp MS_L &kp MS_D &kp MS_U &kp MS_R &kp WH_L &kp WH_R &kp WH_U &kp WH_D &kp MS_BTN1 &kp MS_BTN2 &kp MS_BTN3
        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR &kp MS_BTN4 &kp MS_BTN5 &kp MS_BTN6 &kp MS_BTN7 &kp MS_BTN8 &trans
        &kp LSFT &kp GRAVE &kp TILDE &kp LCBR &kp RCBR &kp LT &kp GT &kp LPRN &kp RPRN &kp UNDERS &kp PIPE &trans
        &kp LCTRL &trans &trans &trans &trans &trans &trans
      >;
    };

    med_layer {
      bindings = <
        &kp ESC &kp K_VOL_DN &kp K_VOL_UP &kp K_MUTE &kp K_PP &kp K_NEXT &kp K_PREV &kp K_STOP &kp K_EJCT &kp INS &kp HOME &kp PG_UP
        &kp TAB &kp K_STOP2 &kp K_VOL_DN &kp K_VOL_UP &kp K_MUTE &trans &trans &kp INS &kp HOME &kp PG_UP &kp END &trans
        &kp LSFT &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &trans
        &kp LCTRL &trans &trans &trans &trans &trans &trans
      >;
    };
  };
};